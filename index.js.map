{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/refs.js","../src/js/render-functions.js","../src/js/handlers.js","../src/main.js"],"sourcesContent":["// http запити\n\nimport axios from \"axios\";\nconst ApiKey = \"52837219-31e3d366b905b38697491d842\"\naxios.defaults.baseURL = 'https://pixabay.com'\nexport function getImagesByQuery(query) {\n    return axios.get(\"/api/\", {\n        params: {\n            key: ApiKey,\n            q: query,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: \"true\"\n        }\n    }).then(res => {\n    return res.data.hits;\n    })\n        .catch(error => {\n    console.log(error.messege);\n    });\n}","export const refs = {\n    formEl: document.querySelector(\".form\"),\n    galleryEl: document.querySelector(\".gallery\")   \n}","import { refs } from \"./refs\"\nexport function createGallery(images) {\n    let markup = \"\"\n    for (const image of images) {\n        markup +=`<li>\n    <a href=\"${image.webformatURL}\">\n    <img src=\"${image.largeImageURL}\" alt=\"${image.tags}\">\n    </a>\n    <ul>\n    <li>\n        <h3>likes</h3>\n        <p>${image.likes}</p>\n    </li>\n    <li>\n        <h3>views</h3>\n        <p>${image.views}</p>\n    </li>\n    <li>\n        <h3>comments</h3>\n        <p>${image.comments}</p>\n    </li>\n    <li>\n        <h3>downloads</h3>\n        <p>${image.downloads}</p>\n    </li>\n</ul>\n    </li>`\n    }\n    refs.galleryEl.insertAdjacentHTML(\"beforeend\", markup)\n}\n\n\nfunction clearGallery() {\n    \n}\nfunction showLoader() {\n    \n}\nfunction hideLoader(){\n    \n}\n","\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { getImagesByQuery } from \"./pixabay-api\"\nimport {createGallery} from \"./render-functions\"\nexport function handleSubmit(event) {\n    event.preventDefault()   \n    const inputEl = event.target.elements[0].value.trim()\n    if (inputEl === \"\") {\n   iziToast.show({\n    position: 'topRight',\n    message: 'Please write something'\n   })\n    return;\n    }  \n    getImagesByQuery(inputEl)\n        .then(hits => {\n            if (!hits || hits.length === 0) {\n                throw new Error('no images found ');\n            }\n        createGallery(hits)\n        })\n        .catch((error) => {\n  iziToast.error({\n    message: `Houston, we have a problem.`,\n    position: 'topRight',\n    backgroundColor: '#ef4040',\n    messageColor: '#ffffff',\n  });\n});\n}","import { handleSubmit } from \"./js/handlers\";\nimport {refs } from \"./js/refs\";\nrefs.formEl.addEventListener(\"submit\", handleSubmit);"],"names":["ApiKey","axios","getImagesByQuery","query","res","error","refs","createGallery","images","markup","image","handleSubmit","event","inputEl","iziToast","hits"],"mappings":"wvBAGA,MAAMA,EAAS,qCACfC,EAAM,SAAS,QAAU,sBAClB,SAASC,EAAiBC,EAAO,CACpC,OAAOF,EAAM,IAAI,QAAS,CACtB,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MACf,CACT,CAAK,EAAE,KAAKC,GACDA,EAAI,KAAK,IACf,EACI,MAAMC,GAAS,CACpB,QAAQ,IAAIA,EAAM,OAAO,CAC7B,CAAK,CACL,CCpBO,MAAMC,EAAO,CAChB,OAAQ,SAAS,cAAc,OAAO,EACtC,UAAW,SAAS,cAAc,UAAU,CAChD,ECFO,SAASC,EAAcC,EAAQ,CAClC,IAAIC,EAAS,GACb,UAAWC,KAASF,EAChBC,GAAS;AAAA,eACFC,EAAM,YAAY;AAAA,gBACjBA,EAAM,aAAa,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,aAK1CA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,aAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,aAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,aAIdA,EAAM,SAAS;AAAA;AAAA;AAAA,WAKxBJ,EAAK,UAAU,mBAAmB,YAAaG,CAAM,CACzD,CCxBO,SAASE,EAAaC,EAAO,CAChCA,EAAM,eAAgB,EACtB,MAAMC,EAAUD,EAAM,OAAO,SAAS,CAAC,EAAE,MAAM,KAAM,EACrD,GAAIC,IAAY,GAAI,CACrBC,EAAS,KAAK,CACb,SAAU,WACV,QAAS,wBACb,CAAI,EACA,MACC,CACDZ,EAAiBW,CAAO,EACnB,KAAKE,GAAQ,CACV,GAAI,CAACA,GAAQA,EAAK,SAAW,EACzB,MAAM,IAAI,MAAM,kBAAkB,EAE1CR,EAAcQ,CAAI,CAC1B,CAAS,EACA,MAAOV,GAAU,CACxBS,EAAS,MAAM,CACb,QAAS,8BACT,SAAU,WACV,gBAAiB,UACjB,aAAc,SAClB,CAAG,CACH,CAAC,CACD,CC5BAR,EAAK,OAAO,iBAAiB,SAAUK,CAAY"}